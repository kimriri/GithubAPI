 1, coroutine flow
   flow 의 사전적 정의 : 흐름
   coroutine flow -> coroutine의 흐름
   suspend 함수가 단일 값만 반환한다면 flow 는 여러개의 값을 순차적으로 반환 할 수 있다.
   단 하나의 flow는 갇은 coroutine 내에서만 동작 한다. 즉 2개의 coroutine 공유하여 사용할 수 없다.

  2. 플로우를 왜쓰나
   플로우를 사용하면 비동기 작업의 결과를 순차적으로 반환받을 수 있다.
   만약 플로우를 사용하지 않는다면 비동기 처리시 결과값은 먼저 연산된 순서대로 나오기때문에 로직이 안정적으로 실행되기 어렵다.
   플로우는 비동기 처리로 인한 작업시간 단축을 얻음과 동시에 결과값은 순차적으로 반환 하기 때문에 로직의 안정서도 높아진다.

3. 플로우를 썼을때 장단점
  장점 : 2번의 플로우를 왜 사용하는지와 갇다. 또한 android의 생명주기와는 관련없이 동작한다.
  단점 : 플로우는 말그대로 데이터의 흐름이기 때문에 데이터를 저장하지는않는다.
  만약 저장해야 하는데이터라면 데이터를 중간에서 다시 한번 저장하는 작업을 해야한다.
  android의 생명주기와 관련없이 동작하는것은 장점이기도 하고 단점이기도 한데
  생명주기와 관련없이 데이터의 흐름을 관리할 수 있지만 반대로 생명주기와 연관되어 작업되어야 한다면 생명주기에 맞춰서 종료시켜주어야한다.

4. stateFlow, sharedFlow 란 ?

